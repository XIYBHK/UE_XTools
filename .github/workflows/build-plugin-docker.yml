name: Build XTools Plugin (Docker)

on:
  workflow_dispatch:
    inputs:
      ue_versions:
        description: 'UE Versions to build'
        required: false
        default: '5.3,5.4,5.5,5.6'
        type: string

jobs:
  build-plugin:
    runs-on: self-hosted  # 如果您想在本地运行Docker构建
    strategy:
      fail-fast: false
      matrix:
        ue_version: ['5.3', '5.4', '5.5', '5.6']
    
    # 使用预构建的UE容器（需要自定义或使用社区镜像）
    container:
      image: ghcr.io/epicgames/unreal-engine:${{ matrix.ue_version }}-dev
      # 注意：Epic的官方镜像需要认证，这里使用示例路径
      # 实际使用时可能需要：
      # 1. 构建自己的UE容器镜像
      # 2. 使用社区提供的UE镜像  
      # 3. 或者使用自托管运行器
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --cpus="4" --memory="8g"

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Verify UE Installation
      run: |
        echo "Verifying Unreal Engine ${{ matrix.ue_version }} installation..."
        ls -la /opt/ue${{ matrix.ue_version }}/Engine/Build/BatchFiles/ || echo "UE not found in expected location"
        
        # 设置UE路径
        echo "UE_ROOT=/opt/ue${{ matrix.ue_version }}" >> $GITHUB_ENV
        echo "UE_VERSION=${{ matrix.ue_version }}" >> $GITHUB_ENV

    - name: Build Plugin
      run: |
        # 设置构建变量
        PLUGIN_FILE="${{ github.workspace }}/XTools.uplugin"
        OUTPUT_DIR="${{ github.workspace }}/PackagedPlugin/XTools-UE_${{ matrix.ue_version }}"
        UAT_SCRIPT="$UE_ROOT/Engine/Build/BatchFiles/RunUAT.sh"
        
        echo "Building XTools plugin..."
        echo "  Plugin file: $PLUGIN_FILE"
        echo "  Output dir:  $OUTPUT_DIR"
        echo "  UAT script:  $UAT_SCRIPT"
        
        # 确保输出目录存在
        mkdir -p "$OUTPUT_DIR"
        
        # 执行构建
        $UAT_SCRIPT BuildPlugin \
          -Plugin="$PLUGIN_FILE" \
          -Package="$OUTPUT_DIR" \
          -TargetPlatforms=Linux \
          -StrictIncludes \
          -NoHostProject
          
        # 检查构建结果
        if [ $? -eq 0 ]; then
          echo "✅ Build completed successfully!"
          echo "Build artifacts:"
          find "$OUTPUT_DIR" -type f -name "*.so" -o -name "*.uplugin" | head -10
        else
          echo "❌ Build failed!"
          exit 1
        fi

    - name: Upload Linux Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: XTools-UE_${{ matrix.ue_version }}-Linux
        path: PackagedPlugin/XTools-UE_${{ matrix.ue_version }}/
        retention-days: 7